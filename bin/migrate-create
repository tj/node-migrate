#!/usr/bin/env node
// vim: set ft=javascript:
'use strict'

var program = require('commander')
var path = require('path')
var rc = require( 'rc' )
var dotenv = require('dotenv')
var log = require('../lib/log')
var registerCompiler = require('../lib/register-compiler')
var pkg = require('../package.json')

var config = rc('migrate', {
  'chdir': process.cwd(),
  'migrations-dir': 'migrations',
  'template-file': path.join(__dirname, '..', 'lib', 'template.js'),
  'extention': '.js',
  'generator': path.join(__dirname, '..', 'lib', 'template-generator')
});

program
  .version(pkg.version)
  .option('-c, --chdir [dir]', 'Change the working directory', config['chdir'])
  .option('--migrations-dir <dir>', 'Change the migrations directory name', config['migrations-dir'])
  .option('--compiler <ext:module>', 'Use the given module to compile files', config['compiler'])
  .option('-d, --date-format [format]', 'Set a date format to use', config['date-format'])
  .option('-t, --template-file [filePath]', 'Set path to template file to use for new migrations', config['template-file'])
  .option('-e, --extention [extention]', 'Use the given extention to create the file', config['extension'])
  .option('-g, --generator <name>', 'A template generator function', config['generator'])
  .option('--env [name]', 'Use dotenv to load an environment file', config['env'])
  .arguments('<name>')
  .action(create)
  .parse(process.argv)

// Setup environment
if (program.env) {
  var e = dotenv.config({
    path: typeof program.env === 'string' ? program.env : '.env'
  })
  if (e && e.error instanceof Error) {
    throw e.error
  }
}

var _name
function create (name) {
  // Name provided?
  _name = name

  // Change the working dir
  process.chdir(program.chdir)

  // Load compiler
  if (program.compiler) {
    registerCompiler(program.compiler)
  }

  // Load the template generator
  var gen = require(program.generator)
  gen({
    name: name,
    dateFormat: program.dateFormat,
    templateFile: program.templateFile,
    migrationsDirectory: program.migrationsDir,
    extention: program.extention
  }, function (err, p) {
    if (err) {
      log.error('Template generation error', err.message)
      process.exit(1)
    }
    log('create', p)
  })
}

if (!_name) {
  log.error('error', 'Migration name required')
  log('usage', 'migrate create <name>')
}
